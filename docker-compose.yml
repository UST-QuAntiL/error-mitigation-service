


# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest #RELEASE.2022-01-27T03-53-02Z
  command: server --console-address ":9001"  http://minio{1...2}/data{1...2} 
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
    networks:
      - default

  error-mitigation-service:
    build: .
    image: planqk/error-mitigation-service:v0.2.0
    command: app.py
    ports:
      - "5071:5000"
    environment:
      - MINIO_URL=nginx:9000
    depends_on:
      - nginx
    networks:
      - default
      
  redis:
    image: redis:latest
    command: --port 5040
    ports:
      - "5040:5040"
    networks:
      - default
      
  qiskit-service:
    image: planqk/qiskit-service:latest
    command: sh /app/startup.sh
    ports:
      - "5013:5013"
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    networks:
      - default

  qiskit-rq-worker:
    image: planqk/qiskit-service:latest
    command: rq worker --url redis://redis:5040 qiskit-service_execute
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    deploy:
      replicas: 2

  
  rq-dashboard:
    image: eoranged/rq-dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:5040


## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  exec_data:

networks:
  default:
    driver: bridge
